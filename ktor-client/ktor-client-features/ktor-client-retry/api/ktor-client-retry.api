public final class io/ktor/client/fatures/retry/Retry {
	public static final field Feature Lio/ktor/client/fatures/retry/Retry$Feature;
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getRetries ()I
	public final fun getRetryIntervalInSeconds ()I
}

public final class io/ktor/client/fatures/retry/Retry$Feature : io/ktor/client/features/HttpClientFeature {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public final fun getRetryPhase ()Lio/ktor/util/pipeline/PipelinePhase;
	public fun install (Lio/ktor/client/fatures/retry/Retry;Lio/ktor/client/HttpClient;)V
	public synthetic fun install (Ljava/lang/Object;Lio/ktor/client/HttpClient;)V
	public fun prepare (Lkotlin/jvm/functions/Function1;)Lio/ktor/client/fatures/retry/Retry;
	public synthetic fun prepare (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/client/fatures/retry/Retry$RequestRetriesExceededException : java/lang/Exception, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;I)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun createCopy ()Lio/ktor/client/fatures/retry/Retry$RequestRetriesExceededException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
	public final fun getAttempts ()I
	public fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
}

public final class io/ktor/client/fatures/retry/Retry$RetryConfig {
	public final fun getRetries ()I
	public final fun getRetryIntervalInSeconds ()I
	public final fun setRetries (I)V
	public final fun setRetryIntervalInSeconds (I)V
}

public final class io/ktor/client/fatures/retry/RetryKt {
	public static final fun retry (Lio/ktor/client/HttpClientConfig;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun retry$default (Lio/ktor/client/HttpClientConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

